// Code generated by microgen 0.10.0. DO NOT EDIT.

package service

import (
	"context"
	log "github.com/go-kit/kit/log"
	service "github.com/valerylobachev/microgen/examples/usersvc/pkg/usersvc"
)

// Cache interface uses for middleware as key-value storage for requests.
type Cache interface {
	Set(key, value interface{}) (err error)
	Get(key interface{}) (value interface{}, err error)
}

func CachingMiddleware(cache Cache) Middleware {
	return func(next service.UserService) service.UserService {
		return &cachingMiddleware{
			cache: cache,
			next:  next,
		}
	}
}

type cachingMiddleware struct {
	cache  Cache
	logger log.Logger
	next   service.UserService
}

func (M cachingMiddleware) CreateUser(ctx context.Context, user service.User) (res0 string, res1 error) {
	return M.next.CreateUser(ctx, user)
}

func (M cachingMiddleware) UpdateUser(ctx context.Context, user service.User) (res0 error) {
	return M.next.UpdateUser(ctx, user)
}

func (M cachingMiddleware) GetUser(ctx context.Context, id string) (res0 service.User, res1 error) {
	return M.next.GetUser(ctx, id)
}

func (M cachingMiddleware) FindUsers(ctx context.Context) (res0 map[string]service.User, res1 error) {
	return M.next.FindUsers(ctx)
}

func (M cachingMiddleware) CreateComment(ctx context.Context, comment service.Comment) (res0 string, res1 error) {
	return M.next.CreateComment(ctx, comment)
}

func (M cachingMiddleware) GetComment(ctx context.Context, id string) (res0 service.Comment, res1 error) {
	return M.next.GetComment(ctx, id)
}

func (M cachingMiddleware) GetUserComments(ctx context.Context, userId string) (res0 []service.Comment, res1 error) {
	return M.next.GetUserComments(ctx, userId)
}

type createUserResponseCacheEntity struct {
	Id string
}
type updateUserResponseCacheEntity struct{}
type getUserResponseCacheEntity struct {
	User service.User
}
type findUsersResponseCacheEntity struct {
	Results map[string]service.User
}
type createCommentResponseCacheEntity struct {
	Id string
}
type getCommentResponseCacheEntity struct {
	Comment service.Comment
}
type getUserCommentsResponseCacheEntity struct {
	List []service.Comment
}
