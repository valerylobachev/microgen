// Code generated by microgen 0.10.0. DO NOT EDIT.

package transporthttp

import (
	log "github.com/go-kit/kit/log"
	opentracing "github.com/go-kit/kit/tracing/opentracing"
	httpkit "github.com/go-kit/kit/transport/http"
	opentracinggo "github.com/opentracing/opentracing-go"
	transport "github.com/valerylobachev/microgen/examples/usersvc/pkg/transport"
	"net/url"
)

func NewHTTPClient(u *url.URL, opts ...httpkit.ClientOption) transport.EndpointsSet {
	return transport.EndpointsSet{
		CreateCommentEndpoint: httpkit.NewClient(
			"POST", u,
			_Encode_CreateComment_Request,
			_Decode_CreateComment_Response,
			opts...,
		).Endpoint(),
		CreateUserEndpoint: httpkit.NewClient(
			"POST", u,
			_Encode_CreateUser_Request,
			_Decode_CreateUser_Response,
			opts...,
		).Endpoint(),
		FindUsersEndpoint: httpkit.NewClient(
			"POST", u,
			_Encode_FindUsers_Request,
			_Decode_FindUsers_Response,
			opts...,
		).Endpoint(),
		GetCommentEndpoint: httpkit.NewClient(
			"POST", u,
			_Encode_GetComment_Request,
			_Decode_GetComment_Response,
			opts...,
		).Endpoint(),
		GetUserCommentsEndpoint: httpkit.NewClient(
			"POST", u,
			_Encode_GetUserComments_Request,
			_Decode_GetUserComments_Response,
			opts...,
		).Endpoint(),
		GetUserEndpoint: httpkit.NewClient(
			"POST", u,
			_Encode_GetUser_Request,
			_Decode_GetUser_Response,
			opts...,
		).Endpoint(),
		UpdateUserEndpoint: httpkit.NewClient(
			"POST", u,
			_Encode_UpdateUser_Request,
			_Decode_UpdateUser_Response,
			opts...,
		).Endpoint(),
	}
}

func TracingHTTPClientOptions(tracer opentracinggo.Tracer, logger log.Logger) func([]httpkit.ClientOption) []httpkit.ClientOption {
	return func(opts []httpkit.ClientOption) []httpkit.ClientOption {
		return append(opts, httpkit.ClientBefore(
			opentracing.ContextToHTTP(tracer, logger),
		))
	}
}
