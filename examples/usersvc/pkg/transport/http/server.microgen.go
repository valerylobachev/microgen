// Code generated by microgen 0.10.0. DO NOT EDIT.

package transporthttp

import (
	log "github.com/go-kit/kit/log"
	opentracing "github.com/go-kit/kit/tracing/opentracing"
	http "github.com/go-kit/kit/transport/http"
	mux "github.com/gorilla/mux"
	opentracinggo "github.com/opentracing/opentracing-go"
	transport "github.com/valerylobachev/microgen/examples/usersvc/pkg/transport"
	http1 "net/http"
)

func NewHTTPHandler(endpoints *transport.EndpointsSet, logger log.Logger, tracer opentracinggo.Tracer, opts ...http.ServerOption) http1.Handler {
	mux := mux.NewRouter()
	mux.Methods("POST").Path("/create-user").Handler(
		http.NewServer(
			endpoints.CreateUserEndpoint,
			_Decode_CreateUser_Request,
			_Encode_CreateUser_Response,
			append(opts, http.ServerBefore(
				opentracing.HTTPToContext(tracer, "CreateUser", logger)))...))
	mux.Methods("POST").Path("/update-user").Handler(
		http.NewServer(
			endpoints.UpdateUserEndpoint,
			_Decode_UpdateUser_Request,
			_Encode_UpdateUser_Response,
			append(opts, http.ServerBefore(
				opentracing.HTTPToContext(tracer, "UpdateUser", logger)))...))
	mux.Methods("POST").Path("/get-user").Handler(
		http.NewServer(
			endpoints.GetUserEndpoint,
			_Decode_GetUser_Request,
			_Encode_GetUser_Response,
			append(opts, http.ServerBefore(
				opentracing.HTTPToContext(tracer, "GetUser", logger)))...))
	mux.Methods("POST").Path("/find-users").Handler(
		http.NewServer(
			endpoints.FindUsersEndpoint,
			_Decode_FindUsers_Request,
			_Encode_FindUsers_Response,
			append(opts, http.ServerBefore(
				opentracing.HTTPToContext(tracer, "FindUsers", logger)))...))
	mux.Methods("POST").Path("/create-comment").Handler(
		http.NewServer(
			endpoints.CreateCommentEndpoint,
			_Decode_CreateComment_Request,
			_Encode_CreateComment_Response,
			append(opts, http.ServerBefore(
				opentracing.HTTPToContext(tracer, "CreateComment", logger)))...))
	mux.Methods("POST").Path("/get-comment").Handler(
		http.NewServer(
			endpoints.GetCommentEndpoint,
			_Decode_GetComment_Request,
			_Encode_GetComment_Response,
			append(opts, http.ServerBefore(
				opentracing.HTTPToContext(tracer, "GetComment", logger)))...))
	mux.Methods("POST").Path("/get-user-comments").Handler(
		http.NewServer(
			endpoints.GetUserCommentsEndpoint,
			_Decode_GetUserComments_Request,
			_Encode_GetUserComments_Response,
			append(opts, http.ServerBefore(
				opentracing.HTTPToContext(tracer, "GetUserComments", logger)))...))
	return mux
}
