// Code generated by microgen 0.10.0. DO NOT EDIT.

package service

import (
	"context"
	log "github.com/go-kit/kit/log"
	service "github.com/valerylobachev/microgen/examples/person/api"
)

// ErrorLoggingMiddleware writes to logger any error, if it is not nil.
func ErrorLoggingMiddleware(logger log.Logger) Middleware {
	return func(next service.PersonService) service.PersonService {
		return &errorLoggingMiddleware{
			logger: logger,
			next:   next,
		}
	}
}

type errorLoggingMiddleware struct {
	logger log.Logger
	next   service.PersonService
}

func (M errorLoggingMiddleware) CreatePerson(ctx context.Context, payload service.CreatePersonPayload) (err error) {
	defer func() {
		if err != nil {
			M.logger.Log("method", "CreatePerson", "message", err)
		}
	}()
	return M.next.CreatePerson(ctx, payload)
}

func (M errorLoggingMiddleware) UpdatePerson(ctx context.Context, payload service.UpdatePersonPayload) (err error) {
	defer func() {
		if err != nil {
			M.logger.Log("method", "UpdatePerson", "message", err)
		}
	}()
	return M.next.UpdatePerson(ctx, payload)
}

func (M errorLoggingMiddleware) DeletePerson(ctx context.Context, payload service.DeletePersonPayload) (err error) {
	defer func() {
		if err != nil {
			M.logger.Log("method", "DeletePerson", "message", err)
		}
	}()
	return M.next.DeletePerson(ctx, payload)
}

func (M errorLoggingMiddleware) GetPersonById(ctx context.Context, id string, source string) (res *service.Person, err error) {
	defer func() {
		if err != nil {
			M.logger.Log("method", "GetPersonById", "message", err)
		}
	}()
	return M.next.GetPersonById(ctx, id, source)
}

func (M errorLoggingMiddleware) GetPersonsById(ctx context.Context, ids []string, source string) (res []service.Person, err error) {
	defer func() {
		if err != nil {
			M.logger.Log("method", "GetPersonsById", "message", err)
		}
	}()
	return M.next.GetPersonsById(ctx, ids, source)
}

func (M errorLoggingMiddleware) FindPersons(ctx context.Context, query service.FindPersonQuery) (res []service.Person, err error) {
	defer func() {
		if err != nil {
			M.logger.Log("method", "FindPersons", "message", err)
		}
	}()
	return M.next.FindPersons(ctx, query)
}
